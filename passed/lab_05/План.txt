1. Запуллить репозиторий
2. Создать новую ветку
git checkout --orphan lab_05
3. Найти репозитории для референса оформления
4. Скопировать папку отчёта своей предыдущей лабы в папку новой

5. Сделать отчёт
	5.1. report.tex
	- поменять тему
	- поменять номер лабы
	5.2. 02-intro.tex
	- написать введение с парой ссылок на источники про задачу поиска подстроки в строке
	- сформулировать цель
	- написать соответствующие задачи
	5.3. 03-analysis.tex
	- абзац про конвейерную обработку данных
	- абзац про стандартный алгоритм поиска подстроки в строке
	- абзац про алгоритм КМП поиска подстроки в строке
	5.4. 04-construction.tex
	- требования к ПО
		- подстрока 6-10 символов
		- 1/8 шанс генерации искомой подстроки и её первых двух символов длиной S+2
		- 7/8 шанс генерации рандомной строки длиной S
		- префикс подстроки дублируется (первая пара символов совпадает со второй): ba_bacab
	- схемы
		- алгоритма генерации подстроки (не обязательно)
		- алгоритма генерации строки (не обязательно)
		- стандартного алгоритма (псевдокод из 7й ЛР)
		- расчёта префиксного массива (псевдокод из 7й ЛР)
		- алгоритма КМП (псевдокод из 7й ЛР)
		- последовательного алгоритма работы стадий конвейера
		- главного потока при параллельном алгоритме работы стадий конвейера
		- обработчика (потока) при параллельном алгоритме работы стадий конвейера
	5.5. 05-techn.tex
	- средства реализации (С++)
		- потоки thread
		- мьютексы mutex
		- библиотека chrono
	- сведения о модулях программы
		- main.cpp --- файл, содержащий меню и точку входа в программу;
		- time.cpp --- модуль замера времени выполнения алгоритмов;
		- prefix.cpp --- модуль расчёта массива префиксов;
		- KMP.cpp --- модуль реализации алгоритма КМП;
		- standart.cpp --- модуль реализации стандартного алгоритма;
		- generate.cpp --- модуль генерации данных;
		- plot.py --- модуль создания графического представления значений.
	- листинги
		- генерации строки
		- генерации подстроки
		- КМП
		- стандартного алгоритма
		- последовательной обработки
		- основного потока при последовательной обработке
	5.6. 06-research.tex
	- технические характеристики
	- пример работы программы
	- время выполнения реализованных алгоритмов
		- последовательный конвейер
		- параллельный конвейер
		- график
	- вывод
		- при значениях ... алгоритм ... лучше алгортима ... на ...%
	5.7. 07-end.tex
	- цель работы достигнута: проведено исследование...
	- в ходе выполнения лабораторной работы были решены все задачи: ...
	- в результате анализа замеров времени был сделан вывод, что ...

6. Удалить ненужные файлы
- использовать алиас, например
alias rm_aa='rm -r *.aux *.acn *.acr *lg *.bbl *.bcf *abr *.glo *.gls *.log report.run.xml report.synctex.gz report.toc report.xdy *.vcxproj* x64 Debug .vs .idea report.out __pycache__'
- или настроить .gitignore
7. Запушить лабу
8. Проверить, не попали ли в репу вместе с пушем "мусорные файлы"
9. Открыть МР
10. Защитить лабу